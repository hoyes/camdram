version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.0-node
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.13
        environment:
            xpack.security.enabled: false
            xpack.monitoring.enabled: false
            xpack.ml.enabled: false
            xpack.graph.enabled: false
            xpack.watcher.enabled: false
      - image: circleci/mariadb:10
        environment:
            MYSQL_DATABASE: camdram_test
            MYSQL_ALLOW_EMPTY_PASSWORD: yes

    working_directory: ~/repo

    environment:
        SYMFONY_DEPRECATIONS_HELPER: weak_vendors
        SYMFONY_ENV: test

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
            name: System setup
            Command: |
                cp app/config/parameters.travis.yml app/config/parameters.yml
                echo 'memory_limit=-1' | sudo tee -a /usr/local/etc/php/php.ini
                sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  
      - run: composer install -n --prefer-dist
      - run: yarn install && yarn build
  
      - save_cache:
          paths:
            - ./vendor
            - ./node_modules
          key: v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
        
      # run tests!
      - run: 
            name: Run Tests
            command: |
                php app/console doctrine:schema:update --force
                php app/console lint:yaml app/config
                php app/console lint:twig app/Resources
                php bin/simple-phpunit
                php bin/behat
      
      - run: 
            name: Test Fixtures and Elasticsearch population
            command: |
                php app/console camdram:database:refresh
                php app/console fos:elastica:populate

      - run:
            name: MySQL migrations
            command: |
                cp app/config/parameters.travis_mysql.yml app/config/parameters.yml
                composer install -n --prefer-dist
                SYMFONY_ENV=dev php app/console doctrine:migrations:migrate --no-interaction